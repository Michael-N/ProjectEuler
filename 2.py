'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''
import math


def binet(n):
    phiPos = (1+ math.sqrt(5))/2
    partial = math.pow(phiPos,n)
    return int((math.pow(phiPos,n) - (1/math.pow(-phiPos,n)))/math.sqrt(5))

if __name__=="__main__":
    sum=0
    i=0
    while True:
        t = binet(i)
        print(str(i)+":  "+str(t))
        if t>3999999:#not exceed mil
            break
        if t%2==0:
            sum+=t
        i+=1

    print(sum)